
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.EmpresaScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  cnpj: 'cnpj',
  email: 'email',
  telefone: 'telefone',
  planoAtualId: 'planoAtualId',
  criadaEm: 'criadaEm'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  empresaId: 'empresaId',
  nome: 'nome',
  email: 'email',
  senhaHash: 'senhaHash',
  role: 'role'
};

exports.Prisma.PlanoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  limitePedidosMes: 'limitePedidosMes',
  precoMensal: 'precoMensal',
  ativo: 'ativo'
};

exports.Prisma.AssinaturaScalarFieldEnum = {
  id: 'id',
  empresaId: 'empresaId',
  stripeCustomerId: 'stripeCustomerId',
  stripeSubscriptionId: 'stripeSubscriptionId',
  periodoFim: 'periodoFim',
  planoId: 'planoId'
};

exports.Prisma.BoardScalarFieldEnum = {
  id: 'id',
  empresaId: 'empresaId',
  titulo: 'titulo',
  createdAt: 'createdAt'
};

exports.Prisma.PedidoStatusScalarFieldEnum = {
  id: 'id',
  boardId: 'boardId',
  titulo: 'titulo',
  ordem: 'ordem'
};

exports.Prisma.PedidoScalarFieldEnum = {
  id: 'id',
  statusId: 'statusId',
  empresaId: 'empresaId',
  codigo: 'codigo',
  fonteId: 'fonteId',
  pagamentoId: 'pagamentoId',
  enderecoId: 'enderecoId',
  desconto: 'desconto',
  taxaEntrega: 'taxaEntrega',
  valorTotal: 'valorTotal',
  observacao: 'observacao',
  criadoEm: 'criadoEm',
  concluidoEm: 'concluidoEm'
};

exports.Prisma.PedidoItemScalarFieldEnum = {
  id: 'id',
  pedidoId: 'pedidoId',
  produtoId: 'produtoId',
  quantidade: 'quantidade',
  precoUnitario: 'precoUnitario',
  observacao: 'observacao'
};

exports.Prisma.ProdutoScalarFieldEnum = {
  id: 'id',
  empresaId: 'empresaId',
  nome: 'nome',
  descricao: 'descricao',
  precoBase: 'precoBase',
  ativo: 'ativo'
};

exports.Prisma.FormaPagamentoScalarFieldEnum = {
  id: 'id',
  nome: 'nome'
};

exports.Prisma.FontePedidoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  tipoIntegracao: 'tipoIntegracao'
};

exports.Prisma.EnderecoScalarFieldEnum = {
  id: 'id',
  rua: 'rua',
  numero: 'numero',
  complemento: 'complemento',
  bairro: 'bairro',
  cidade: 'cidade',
  uf: 'uf',
  cep: 'cep',
  referencia: 'referencia'
};

exports.Prisma.LogMovimentacaoScalarFieldEnum = {
  id: 'id',
  pedidoId: 'pedidoId',
  deStatusId: 'deStatusId',
  paraStatusId: 'paraStatusId',
  dataMovimentacao: 'dataMovimentacao'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.EmpresaOrderByRelevanceFieldEnum = {
  id: 'id',
  nome: 'nome',
  cnpj: 'cnpj',
  email: 'email',
  telefone: 'telefone',
  planoAtualId: 'planoAtualId'
};

exports.Prisma.UsuarioOrderByRelevanceFieldEnum = {
  id: 'id',
  empresaId: 'empresaId',
  nome: 'nome',
  email: 'email',
  senhaHash: 'senhaHash'
};

exports.Prisma.PlanoOrderByRelevanceFieldEnum = {
  id: 'id',
  nome: 'nome'
};

exports.Prisma.AssinaturaOrderByRelevanceFieldEnum = {
  id: 'id',
  empresaId: 'empresaId',
  stripeCustomerId: 'stripeCustomerId',
  stripeSubscriptionId: 'stripeSubscriptionId',
  planoId: 'planoId'
};

exports.Prisma.BoardOrderByRelevanceFieldEnum = {
  id: 'id',
  empresaId: 'empresaId',
  titulo: 'titulo'
};

exports.Prisma.PedidoStatusOrderByRelevanceFieldEnum = {
  id: 'id',
  boardId: 'boardId',
  titulo: 'titulo'
};

exports.Prisma.PedidoOrderByRelevanceFieldEnum = {
  id: 'id',
  statusId: 'statusId',
  empresaId: 'empresaId',
  codigo: 'codigo',
  fonteId: 'fonteId',
  pagamentoId: 'pagamentoId',
  enderecoId: 'enderecoId',
  observacao: 'observacao'
};

exports.Prisma.PedidoItemOrderByRelevanceFieldEnum = {
  id: 'id',
  pedidoId: 'pedidoId',
  produtoId: 'produtoId',
  observacao: 'observacao'
};

exports.Prisma.ProdutoOrderByRelevanceFieldEnum = {
  id: 'id',
  empresaId: 'empresaId',
  nome: 'nome',
  descricao: 'descricao'
};

exports.Prisma.FormaPagamentoOrderByRelevanceFieldEnum = {
  id: 'id',
  nome: 'nome'
};

exports.Prisma.FontePedidoOrderByRelevanceFieldEnum = {
  id: 'id',
  nome: 'nome',
  tipoIntegracao: 'tipoIntegracao'
};

exports.Prisma.EnderecoOrderByRelevanceFieldEnum = {
  id: 'id',
  rua: 'rua',
  numero: 'numero',
  complemento: 'complemento',
  bairro: 'bairro',
  cidade: 'cidade',
  uf: 'uf',
  cep: 'cep',
  referencia: 'referencia'
};

exports.Prisma.LogMovimentacaoOrderByRelevanceFieldEnum = {
  id: 'id',
  pedidoId: 'pedidoId',
  deStatusId: 'deStatusId',
  paraStatusId: 'paraStatusId'
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  FUNCIONARIO: 'FUNCIONARIO'
};

exports.Prisma.ModelName = {
  Empresa: 'Empresa',
  Usuario: 'Usuario',
  Plano: 'Plano',
  Assinatura: 'Assinatura',
  Board: 'Board',
  PedidoStatus: 'PedidoStatus',
  Pedido: 'Pedido',
  PedidoItem: 'PedidoItem',
  Produto: 'Produto',
  FormaPagamento: 'FormaPagamento',
  FontePedido: 'FontePedido',
  Endereco: 'Endereco',
  LogMovimentacao: 'LogMovimentacao'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
